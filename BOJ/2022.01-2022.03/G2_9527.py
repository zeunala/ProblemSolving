'''
1의 개수 세기

입력
첫 줄에 두 자연수 A, B가 주어진다. (1 ≤ A ≤ B ≤ 10^16)

출력
1의 개수를 세어 출력한다.
'''

'''
- 0부터 시작한다고 했을 때, 뒤에서 첫번째 자리는 1번 1이 되었다 0이 되고, 두번째 자리는 2번 1이 되었다 2번 0이 되고,
n번째 자리는 2^(n-1)번 1이 되고 2^(n-1)번 0이 됨을 반복한다는 것을 이용한다.
* Pass/1st/00:16:12
'''
def findOneSum(a): # 1부터 a까지의 1의 개수를 리턴한다.
    if a == 0:
        return 0
    
    result = 0
    
    a = a + 1 # 0부터 카운팅하므로 미리 1을 더함
    
    idx = 0 # 뒤에서 idx+1번째 자리부터 탐색
    while 2**(idx) < a:
        t = a // (2 ** idx) # 0 -> 1 -> ... 를 각각 한 주기로 봤을 때 몇 주기인지
        result += (t // 2) * (2 ** idx) # 총 주기의 절반만큼 1이 나옴
        if t % 2 == 1: # 1 부분에서 하나의 주기를 다 채우지 못해 잘린 경우가 있을 수 있어 그 부분도 체크해준다
            result += a % (2 ** idx)
            
        idx += 1
    
    return result
        
A, B = map(int, input().split())

print(findOneSum(B) - findOneSum(A-1))