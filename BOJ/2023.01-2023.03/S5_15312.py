'''
이름 궁합

입력
첫 번째 줄에는 종민이의 영어 이름 A가 주어진다. 
두 번째 줄에는 '그녀'의 영어 이름 B가 주어진다.
A와 B 모두 알파벳 대문자로만 이루어진 길이 2 이상 2000 이하의 문자열이며, 둘의 길이가 같음이 보장된다.
이름 궁합을 볼 때는 A의 첫 글자를 먼저 쓴다고 하자.

출력
이름 궁합의 결과를 두 자리의 숫자로 출력한다. (십의 자리가 0이어도 두 자리로 출력한다)
'''

'''
- 길이가 최대 2000이므로 문제의 요구사항을 그대로 구현하면 된다.
* Pass/1st/00:10:05
- 문제 풀이 이후 다른 사람의 풀이를 본 결과 파이썬의 ord로 alphaToNum을 대신할 수 있고
매번 새 배열을 만드는 대신 큐를 이용하면 더 최적화가 가능할 것으로 보인다. 
'''
A = input()
B = input()

alphaToNum = {"A": 3, "B": 2, "C": 1, "D": 2, "E": 3, "F": 3, "G": 2,
              "H": 3, "I": 3, "J": 2, "K": 2, "L": 1, "M": 2, "N": 2,
              "O": 1, "P": 2, "Q": 2, "R": 2, "S": 1, "T": 2, "U": 1,
              "V": 1, "W": 1, "X": 2, "Y": 2, "Z": 1}

score = []
for i in range(len(A)): # 시작 첫 줄
    score.append(alphaToNum[A[i]])
    score.append(alphaToNum[B[i]])

while len(score) > 2: # 숫자가 2개 남을 때까지 합쳐나감
    score = [(score[i] + score[i + 1]) % 10 for i in range(len(score) - 1)]
    
print(str(score[0]) + str(score[1]))