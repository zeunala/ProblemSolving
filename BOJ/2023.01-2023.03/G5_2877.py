'''
4와 7

입력
첫째 줄에 K(1 ≤ K ≤ 10^9)가 주어진다.

출력
첫째 줄에 창영이가 좋아하는 숫자 중 K번째 작은 수를 출력한다.
'''

'''
- 한자릿수 중에서는 4와 7 2개가 있고,
두자릿수 중에서는 44, 47, 74, 77 4개가 있고,
n자릿수 중에서는 44..4, ..., 77...7 2^n개가 있다.
또한 n자릿수 중에서 m번째수(m>=0)는, m을 2진수로 변환한 것에서 0을 4, 1을 7로 변환한 것이라 할 수 있다.
예를 들어 두자릿수 중에서 0(00)번째 수는 44, 1(01)번째수는 47, 2(10)번째수는 74, 3(11)번째수는 77이다.
* Pass/1st/00:15:15
- 문제 풀이 이후 다른 사람의 풀이를 본 결과 자릿수를 구할 필요 없이 그냥 K+1을 이진수로 고치고
가장 큰 자릿수를 없앤 상태로 replace하는 더 간단한 방법이 있음을 알게 되었다.
추가로 format(K + 1, 'b')과 같이 작성해서 0b를 생략할 수 있음도 알게 되었다.
'''
K = int(input())
length = 1 # 자릿수가 몇 개인지

# 자릿수가 몇 개인지 구한다. 이후 K는 그 자릿수에서 몇 번째 수인지가 된다.
idx = 2
K -= 1 # 0번째부터 시작하도록 1을 빼준다.
while K >= idx:
    K -= idx
    idx *= 2
    length += 1
    
# ex. 23 -> '0b10111' -> '10111' -> '74777'
answer = bin(K)[2:].replace('0','4').replace('1','7')
# 자릿수에 맞춰 앞에 4를 채운다.
if len(answer) < length:
    answer = '4' * (length - len(answer)) + answer

print(answer)