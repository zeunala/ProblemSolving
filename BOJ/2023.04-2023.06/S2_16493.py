'''
최대 페이지 수

입력
첫째 줄에 N(1 ≤ N ≤ 200)과 챕터의 수 M(1 ≤ M ≤ 20)이 주어진다.
둘째 줄부터 각 챕터 당 읽는데 소요되는 일 수와 페이지 수가 주어진다.
소요되는 일 수는 20보다 작거나 같은 자연수이고, 페이지 수는 300보다 작거나 같은 자연수이다.

출력
읽을 수 있는 최대 페이지 수를 출력한다.
'''

'''
- dp 배열을 두어 dp[i]를 i일 동안 읽을 수 있는 최대 페이지 수로 두고, 각 챕터에 대해 배열을 갱신한다.
* Pass/1st/00:11:01
'''
N, M = map(int, input().split()) # N일 동안 총 M개의 책
arr = [] # (소요되는 일 수, 페이지 수)의 배열
for i in range(M):
    a, b = map(int, input().split())
    arr.append((a, b))
    
dp = [0] * (N + 1) # dp[i]는 i일 동안 읽을 수 있는 최대 페이지 수

for (a, b) in arr: # 각 챕터에 대해 체크
    for i in range(len(dp) - 1, -1, -1):
        if i + a < len(dp) and dp[i + a] < dp[i] + b: # 그 챕터를 읽었을 때 최대 페이지 수가 갱신되는 경우
            dp[i + a] = dp[i] + b
print(dp[-1])